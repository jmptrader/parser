
/[ \t\n]/   { /* Skip white space */ }
/[0-9]+/    { lval.int_t, _ = strconv.Atoi(yylex.Text()); return NUM }
/\+/        { return '+' }
/\-/        { return '-' }
/\*/        { return '*' }
/\//        { return '/' }
/\(/        { return '(' }
/\)/        { return ')' }
/['"]/      { return '\'' }
/\./        { return '.' }
/\;/        { return ';' }
/\,/        { return ',' }
/\=/        { return '=' }
/\</        { return '<' }
/\>/        { return '>' }
/>=/        { return TK_GTE }
/<=/        { return TK_LTE }
/!=/        { return TK_NE }
/[aA][nN][dD]/ { return KW_AND }
/[oO][rR]/  { return KW_OR }
/[nN][oO][tT]/ { return KW_NOT }
/[iI][nN][tT][eE][gG][eE][rR]/ {  return KW_INTEGER }
/[cC][hH][aA][rR]/ {return KW_CHAR }
/[cC][rR][eE][aA][tT][eE]/ { return KW_CREATE }
/[tT][aA][bB][lL][eE]/ { return KW_TABLE }
/[dD][eE][lL][eE][tT][eE]/ { return KW_DELETE }
/[iI][nN][sS][eE][rR][tT]/ { return KW_INSERT }
/[iI][nN][tT][oO]/ { return KW_INTO }
/[vV][aA][lL][uU][eE]/ { return KW_VALUE }
/[sS][eE][lL][eE][cC][tT]/ { return KW_SELECT }
/[uU][pP][dD][aA][tT][eE]/ { return KW_UPDATE }
/[wW][hH][eE][rR][eE]/ { return KW_WHERE }
/[fF][rR][oO][mM]/ { return KW_FROM }
/[sS][eE][tT]/ { return KW_SET }
/[a-zA-Z][a-zA-Z0-9_]*/ { lval.string_t = yylex.Text();  return TK_WORD }
/./         { panic(fmt.Sprintf("Unexpected token '%s'", yylex.Text())) }
//

package main

import (
    "os"
    "strconv"
    "fmt"
    
)

func main() {
    yyParse(NewLexer(os.Stdin))
}